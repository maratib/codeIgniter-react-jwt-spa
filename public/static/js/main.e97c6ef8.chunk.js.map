{"version":3,"sources":["utils/RouterPaths.ts","pages/About.tsx","pages/Home.tsx","pages/Login.tsx","pages/User.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RouterPaths","About","props","Home","Login","User","App","state","isSmallScreen","updateDimensions","e","setState","window","innerWidth","addEventListener","this","removeEventListener","to","HOME","ABOUT","LOGIN","USER","exact","path","component","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAAKA,E,sGCSUC,EAPqB,SAACC,GACnC,OACE,8BACE,0CCISC,EAPmB,SAACD,GACjC,OACE,8BACE,8CCISE,EAPqB,SAACF,GACnC,OACE,8BACE,0CCISG,EAPmB,SAACH,GACjC,OACE,8BACE,oD,SJLDF,K,SAAAA,E,eAAAA,E,eAAAA,E,cAAAA,M,KAQUA,QK+CAM,E,4MAvCbC,MAAQ,CAAEC,eAAe,G,EAWjBC,iBAAmB,SAACC,GAC1B,EAAKC,SAAS,CAAEH,cAAeI,OAAOC,WAAa,O,uDAVrD,WACED,OAAOE,iBAAiB,SAAUC,KAAKN,kBAEvCM,KAAKN,iBAAiB,Q,kCAExB,WACEG,OAAOI,oBAAoB,SAAUD,KAAKN,oB,oBAM5C,WACE,OACE,cAAC,IAAD,UACE,gCACE,0DACCM,KAAKR,MAAMC,cAAgB,OAAS,QACrC,gCACE,cAAC,IAAD,CAAMS,GAAIjB,EAAYkB,KAAtB,kBACA,cAAC,IAAD,CAAMD,GAAIjB,EAAYmB,MAAtB,mBACA,cAAC,IAAD,CAAMF,GAAIjB,EAAYoB,MAAtB,mBACA,cAAC,IAAD,CAAMH,GAAIjB,EAAYqB,KAAtB,qBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAMvB,EAAYkB,KAAMM,UAAWrB,IAChD,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAMvB,EAAYmB,MAAOK,UAAWvB,IACjD,cAAC,IAAD,CAAOqB,OAAK,EAACC,KAAMvB,EAAYoB,MAAOI,UAAWpB,IACjD,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAMvB,EAAYqB,KAAMG,UAAWnB,IAChD,cAAC,IAAD,CAAUY,GAAIjB,EAAYkB,mB,GAhCpBO,IAAMC,WCDTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e97c6ef8.chunk.js","sourcesContent":["enum RouterPaths  {\n\tHOME = '/',\n    ABOUT = '/about',\n    LOGIN = '/login',\n    USER = '/user'\n\n}\n\nexport default RouterPaths;","interface AboutProps {}\n\nconst About: React.FC<AboutProps> = (props) => {\n  return (\n    <div>\n      <h1>About</h1>\n    </div>\n  );\n};\nexport default About;\n","interface HomeProps {}\n\nconst Home: React.FC<HomeProps> = (props) => {\n  return (\n    <div>\n      <h1>Home Page</h1>\n    </div>\n  );\n};\nexport default Home;\n","interface LoginProps {}\n\nconst Login: React.FC<LoginProps> = (props) => {\n  return (\n    <div>\n      <h1>Login</h1>\n    </div>\n  );\n};\nexport default Login;\n","interface UserProps {}\n\nconst User: React.FC<UserProps> = (props) => {\n  return (\n    <div>\n      <h1>User Dashboard</h1>\n    </div>\n  );\n};\nexport default User;\n","import React from \"react\";\nimport { BrowserRouter, Link, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./assets/styles/App.scss\";\nimport About from \"./pages/About\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport User from \"./pages/User\";\nimport RouterPaths from \"./utils/RouterPaths\";\n\nexport interface AppProps {}\n\nexport interface AppState {\n  isSmallScreen: boolean;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  state = { isSmallScreen: false };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    this.updateDimensions(null);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  private updateDimensions = (e: any) => {\n    this.setState({ isSmallScreen: window.innerWidth < 500 });\n  };\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <h1>Hello from React 123 333</h1>\n          {this.state.isSmallScreen ? \"TRUE\" : \"FALSE\"}\n          <nav>\n            <Link to={RouterPaths.HOME}>Home</Link>\n            <Link to={RouterPaths.ABOUT}>About</Link>\n            <Link to={RouterPaths.LOGIN}>Login</Link>\n            <Link to={RouterPaths.USER}>User</Link>\n          </nav>\n          <Switch>\n            <Route exact path={RouterPaths.HOME} component={Home} />\n            <Route exact path={RouterPaths.ABOUT} component={About} />\n            <Route exact path={RouterPaths.LOGIN} component={Login} />\n            <Route exact path={RouterPaths.USER} component={User} />\n            <Redirect to={RouterPaths.HOME} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/styles/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}